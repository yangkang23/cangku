<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.brt.oa.customer.dao.CustomerDao">
    <sql id="Base_Column_List">
        id,
        customer_name,
        sex,
        birthday,
        phone,
        channelid,
        deal,
        storeid,
        `state`,
        address
    </sql>
    <resultMap id="BaseResultMap" type="com.brt.oa.customer.pojo.Customer">
        <result column="id" property="id"/>
        <result column="customer_name" property="customer_name"/>
        <result column="sex" property="sex"/>
        <result column="birthday" property="birthday"/>
        <result column="phone" property="phone"/>
        <result column="channelid" property="channelid"/>
        <result column="deal" property="deal"/>
        <result column="storeid" property="storeid"/>
        <result column="state" property="state"/>
        <result column="address" property="address"/>
    </resultMap>
    <insert id="createCustomerInfo" parameterType="com.brt.oa.customer.pojo.Customer">
        insert into customer(customer_name, sex, phone, channelid, deal, storeid, birthday, state, address)
        values (#{customer_name}, #{sex}, #{phone}, #{channelid}, #{deal}, #{storeid}, #{birthday}, #{state},
        #{address})
    </insert>

    <select id="findCustomer" parameterType="java.lang.Integer" resultType="com.brt.oa.customer.pojo.Customer">
        select *
        from customer where storeid = #{storeid}
        <if test="customer_name != '' and customer_name != null">
            and customer_name = #{customer_name}
        </if>
        and state = 1;
    </select>

    <update id="updateDeal">
        update customer
        set deal = #{deal}
        where id = #{cid}
        and state = 1;
    </update>

    <select id="findAllCustomer" resultType="com.brt.oa.customer.pojo.Customer">
        select *
        from customer where 1 = 1
        <if test="customer_name != '' and customer_name != null">
            and customer_name like concat('%', #{customer_name}, '%')
            or
            phone like concat('%', #{customer_name}, '%')
        </if>
        <if test="storeid != 0">
            and storeid = #{storeid}
        </if>

        and state = 1
        limit #{start},#{size}
    </select>

    <select id="findTotal" resultType="java.lang.Integer">
        select count(1)
        from customer where 1 = 1
        <if test="storeid != 0 and storeid != null">
            and storeid = #{storeid}
        </if>
        and state = 1;
    </select>

    <select id="findChannelList" resultType="java.lang.Integer">
        select distinct channelid
        from customer where 1 = 1
        <if test="storeid != 0">
            and storeid = #{storeid}
        </if>
        and state = 1;
    </select>

    <select id="findChannelAmount" resultType="java.lang.Integer">
        select count(1)
        from customer where channelid = #{channelid}
        <if test="storeid != 0">
            and storeid = #{storeid}
        </if>
        and state = 1;
    </select>

    <select id="findChannelDealAmount" resultType="java.lang.Integer">
        select count(1)
        from customer where channelid = #{channelid}
        and deal = 1
        <if test="storeid != 0">
            and storeid = #{storeid}
        </if>
        and state = 1;
    </select>

    <update id="updateCustomerById">
        update customer set
        <if test="customer.customer_name != null and customer.customer_name != ''">
            customer_name =#{customer.customer_name},
        </if>
        <if test="customer.birthday != null">
            birthday = #{customer.birthday},
        </if>
        <if test="customer.channelid != null">
            channelid = #{customer.channelid},
        </if>
        <if test="customer.phone != null and customer.phone != ''">
            phone = #{customer.phone},
        </if>
        <if test="customer.sex != null">
            sex = #{customer.sex},
        </if>
        <if test="customer.storeid != null">
            storeid = #{customer.storeid},
        </if>
        <if test="customer.address != null and customer.address != ''">
            address = #{customer.address}
        </if>
        where id = #{id}
        and state = 1;
    </update>

    <update id="deleteCustomerById">
        update customer set
        <if test="state != null">
            state = #{state}
        </if>
        where id = #{id}
    </update>

    <select id="findNameById" resultType="java.lang.String">
        select customer_name
        from customer
        <where>
            <if test="cid != null">
                and id = #{cid}
            </if>
            and state = 1;
        </where>
    </select>

    <select id="findTotals" resultType="java.lang.Integer">
        select count(1)
        from customer where 1 = 1
        <if test="customer_name != '' and customer_name != null">
            and customer_name like concat('%', #{customer_name}, '%')
        </if>
        <if test="storeid != 0 and storeid != null">
            and storeid = #{storeid}
        </if>

        and state = 1;
    </select>
</mapper>